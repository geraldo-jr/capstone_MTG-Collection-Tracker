<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" type="text/css" href="css/styles.css">
  <title>MTG Collection Tracker App</title>
  <script src="/JS/loginLogoutUser.js"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap" rel="stylesheet">
</head>
<body>
  <header >
    <h2 class="logo-mtg-name">MTG Collection Tracker</h2>

    <nav class="nav">
      <ul>
        <li class="nav-link"><a href="/">Collection</a></li>
        <li class="nav-link"><a href="decks">Decks</a></li>
        <li class="nav-link"><a href="about">About</a></li>
        <li class="nav-link"><a href="help">Help</a></li>
      </ul>
    </nav>

    <div class="login-panel">
      <h4 id="loginPanelInfo" >Please <a href="#" class="openBox" origin="login">login</a> or <a href="#" class="openBox" origin="signup">create an account</a></h4>
      <div id="signup" class="signup-box">
        <div class="box-content">
          <div class="signup-form">
            <a class="close">&times;</a>
            <div class="openedSignupBox">
              <h3>Create New Account</h3>
              <div>
                <label for="first_name">First Name: </label> <input type="text" id="first_name" name="first_name" placeholder="Insert First Name"><br> 
                <label for="last_name">Last Name: </label><input type="text" id="last_name" name="last_name" placeholder="Insert Last Name"><br>
                <label for="username">@Username*: </label><input type="text" id="username" name="username" placeholder="NewCoolUsername" required><br>
                <label for="email">Email*: </label><input type="email" id="email" pattern=".+@globex\.com" placeholder="Insert Your Email" size="30" required><br>
                <label for="pass">Password*: </label> <input type="password" id="pass" name="password" minlength="8" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters" required><br>
                <button type="submit" onclick="javascript:createNewUser()">Create New User Account</button>
                <div id="password-message">
                  <h3>Password must contain the following:</h3>
                  <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
                  <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                  <p id="number" class="invalid">A <b>number</b></p>
                  <p id="length" class="invalid">Minimum <b>8 characters</b></p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div id="login" class="signup-box">
        <div class="box-content">
          <div class="signup-form">
            <a class="close">&times;</a>
            <div class="openedSignupBox">
              <h3>Create New Account</h3>
              <div>
                <label for="login-email">Email*: </label><input type="email" id="login-email" pattern=".+@globex\.com" placeholder="Insert Your Email" size="30" required><br>
                <label for="login-password">Password* (8 characters minimum): </label> <input type="password" id="login-password" name="password" minlength="8" required><br>
                <button type="submit" onclick="javascript:loginUser()">Login</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </header>

<<<<<<< HEAD
  
=======
  <a href="db-info">Check DB insert and info</a>
  <br>
  <br>

  <!-- <div id="addCardDeck">
    <button id="addCardToDeck" name="addCardToDeck" onclick="javascript:addCardToDeck()">Add card to selected deck.</button>
    <label for="selectDeck">Select Deck:</label>
    <p id="test"></p>

  </div> -->
>>>>>>> c048fbc63e253fc5ed293f75fcffd8f443de3dc3
  
  <fieldset class="add-card">
    <legend><p>Add card:</p></legend>
    <label for="cardSelection">Card name: </label> <input type="text" name="cardSelection" id="cardSelectionInput" placeholder="Insert card name">
    <input type="submit" name="submitCardSelection" value="Select Card" onclick="javascript:getCardInfo()"><br>
    <p id="card-selected-info"></p>
    <label for="numOfCopies">Copies:</label>
    <input type="number" name="numOfCopies" id="num-of-copies" min="1" max="99">
    <span>Foiled:</span>
    <input type="radio" name="foiled" id="yes-foiled" value="true"><label for="foiled">Yes</label>
    <input type="radio" name="foiled" id="not-foiled" value="false"><label for="notFoiled">No</label>
    <br>
    <input type="submit" name="addCard" value="Add Card to Collection">

    <div id="display-card-options">
      <a class="close">&times;</a>
      <span><b>Select your cards:</b></span>
      <div class="display-cards-result" id="display-cards-result">
      </div>
      
    </div>
  </fieldset> <!-- end of add card element -->

  <fieldset class="filter-cards">
    <legend><p>Filters:</p></legend>
    <input type="text" placeholder="Card Text" id="card-text">
    <input type="text" placeholder="Set" id="card-set">
    <input type="text" placeholder="Type" id="card-type">
    <input type="text" placeholder="CMC" id="card-cmc">
    <input type="text" placeholder="Color" id="card-color">
    <input type="text" placeholder="Subtype" id="card-subtype">
    <input type="text" placeholder="Rarity" id="card-rarity">
    <br>
    <input type="submit" value="Filter Table">
  </fieldset> <!-- end of filter card element -->

  <form id="sort">
    <fieldset>
      <legend><h3>Sort your cards</h3></legend>
      <input type="checkbox" id="mana_cost" name="card_type" placeholder="Mana cost sort" value="true">Mana Cost<br>
      <input type="checkbox" id="red_type" name="card_type" placeholder="Red type of mana">Red Mana Type<br>
      <input type="checkbox" id="black_type" name="card_type" placeholder="Black type of mana">Black Mana Type<br>
      <input type="checkbox" id="blue_type" name="card_type" placeholder="Blue type of mana">Blue Mana Type<br>
      <input type="checkbox" id="white_type" name="card_type" placeholder="White type of mana">White Mana Type<br>
      <input type="checkbox" id="green_type" name="card_type" placeholder="Green type of mana">Green Mana Type<br>
      <input type="checkbox" id="none_type" name="card_type" placeholder="None type of mana">None Mana Type<br><br>
      <input type="submit" value="Sort">
    </fieldset>
  </form>
  
  <div class="cards_box">
    <div class="cards_row">
      <div id="red_card" class="card">3 cost Red</div>
      <div id="black_card" class="card">6 cost Black</div>
      <div id="blue_card" class="card">2 cost Blue</div>
      <div id="white_card" class="card">4 cost White</div>
      <div id="green_card"  class="card">5 cost Green</div>
      <div id="none_card" class="card">1 cost None</div>
    </div>
  </div>  

  <script src="/JS/loginPanels.js"></script>
  <script src="/JS/validatePassword.js"></script>
  <script>
        
    // Fetching card from API
    const getCardInfo = async function() {
      const cardName = document.getElementById('cardSelectionInput').value;

      if (cardName.trim() === "") {
        alert("Please, insert a valid input to search for a card.")
      } else {
              
        const response = await fetch('/fetchCard', {
          method: 'POST', 
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            card_name: cardName
          })
        });
        
        const result = await response.json();
        
        let showResultsWindow = document.getElementById('display-cards-result');
        showResultsWindow.innerHTML = "";

        // Checks if card name inserted is valid. If card not found, a message with an error will be informed. Otherwise displays the image and card text
        if (result.cards === undefined) {
          errorFecthingCard(showResultsWindow, "Card not found with this name.")
        } else {
          let cardsFounded = result.cards;
          console.log(cardsFounded.length);
          if (cardsFounded.length >= 20) {
            errorFecthingCard(showResultsWindow, "Too many cards were founded with this name. Please, provide a specific name for the card.")            
          } else {
            
            cardsFounded.forEach(card => {
              let cardNameDisplay = document.createElement('span');
              cardNameDisplay.innerText = "Card name:" + card.name;
              let cardImageDisplay = document.createElement('img');
              cardImageDisplay.setAttribute('src', card.imageUrl);
              cardImageDisplay.setAttribute('class', 'card-image-result');
              cardImageDisplay.id = card.multiverseid;
              showResultsWindow.append(cardNameDisplay, cardImageDisplay);
              cardImageDisplay.onclick = function () {
                let cardSelectedDisplayInfo = document.getElementById('card-selected-info');
                cardSelectedDisplayInfo.style.display = "block";
                cardSelectedDisplayInfo.innerText = `Card selected: "${card.name}" number ${card.number} from set "${card.setName}".`;
                document.getElementById('display-card-options').style.display = "none";

              };
            });

            console.log(result.cards);
          }
        }
        document.getElementById('display-card-options').style.display = "block";
      }
    };
<<<<<<< HEAD
    
=======

    // Display a message on the selecting card box when no card found, too many cards result, or incorrect name entered.
    function errorFecthingCard(showResultsWindow, errorMessage) {
      
      let displayErrorMessage = document.createElement('span');
      displayErrorMessage.innerText = errorMessage;
      showResultsWindow.appendChild(displayErrorMessage);
    }

>>>>>>> c048fbc63e253fc5ed293f75fcffd8f443de3dc3
    // get access to the form subbmitted.
    const form = document.getElementById('sort');

    form.addEventListener('submit', (event) => {
      event.preventDefault();
      var mana_cost = form.elements[1];
      var red_mana = form.elements[2];
      var black_mana = form.elements[3];
      var blue_mana = form.elements[4];
      var white_mana = form.elements[5];
      var green_mana = form.elements[6];
      var none_mana = form.elements[7];

      if (red_mana.checked){
        if (document.getElementById('red_card').style.display="none"){
          document.getElementById('red_card').style.display="table-cell";
        } 
        if (black_mana.checked) {
          document.getElementById('black_card').style.display="table-cell";
        } else {
          document.getElementById('black_card').style.display="none";
        }
        if (blue_mana.checked) {
          document.getElementById('blue_card').style.display="table-cell";
        } else {
          document.getElementById('blue_card').style.display="none";
        }
        if (white_mana.checked) {
          document.getElementById('white_card').style.display="table-cell";
        } else {
          document.getElementById('white_card').style.display="none";
        }
        if (green_mana.checked) {
          document.getElementById('green_card').style.display="table-cell";
        } else {
          document.getElementById('green_card').style.display="none";
        } 
        if (none_mana.checked) {
          document.getElementById('none_card').style.display="table-cell";
        } else {
          document.getElementById('none_card').style.display="none";
        }
        console.log(red_mana);
      } else if (black_mana.checked){
        if (document.getElementById('black_card').style.display="none"){
          document.getElementById('black_card').style.display="table-cell";
        }
        if (blue_mana.checked) {
          document.getElementById('blue_card').style.display="table-cell";
        } else {
          document.getElementById('blue_card').style.display="none";
        }
        if (white_mana.checked) {
          document.getElementById('white_card').style.display="table-cell";
        } else {
          document.getElementById('white_card').style.display="none";
        }
        if (green_mana.checked) {
          document.getElementById('green_card').style.display="table-cell";
        } else {
          document.getElementById('green_card').style.display="none";
        } 
        if (none_mana.checked) {
          document.getElementById('none_card').style.display="table-cell";
        } else {
          document.getElementById('none_card').style.display="none";
        }
        document.getElementById('red_card').style.display="none";
        console.log(black_mana);
      } else if (blue_mana.checked){
        if (document.getElementById('blue_card').style.display="none"){
          document.getElementById('blue_card').style.display="table-cell";
        }
        if (white_mana.checked) {
          document.getElementById('white_card').style.display="table-cell";
        } else {
          document.getElementById('white_card').style.display="none";
        }
        if (green_mana.checked) {
          document.getElementById('green_card').style.display="table-cell";
        } else {
          document.getElementById('green_card').style.display="none";
        } 
        if (none_mana.checked) {
          document.getElementById('none_card').style.display="table-cell";
        } else {
          document.getElementById('none_card').style.display="none";
        }
        document.getElementById('red_card').style.display="none";
        document.getElementById('black_card').style.display="none";
        console.log(blue_mana);
      } else if (white_mana.checked){
        if (document.getElementById('white_card').style.display="none"){
          document.getElementById('white_card').style.display="table-cell";
        }
        if (green_mana.checked) {
          document.getElementById('green_card').style.display="table-cell";
        } else {
          document.getElementById('green_card').style.display="none";
        } 
        if (none_mana.checked) {
          document.getElementById('none_card').style.display="table-cell";
        } else {
          document.getElementById('none_card').style.display="none";
        }
        document.getElementById('red_card').style.display="none";
        document.getElementById('black_card').style.display="none";
        document.getElementById('blue_card').style.display="none";
        console.log(white_mana);
      } else if (green_mana.checked){
        if (document.getElementById('green_card').style.display="none"){
          document.getElementById('green_card').style.display="table-cell";
        }
        if (none_mana.checked) {
          document.getElementById('none_card').style.display="table-cell";
        } else {
          document.getElementById('none_card').style.display="none";
        }
        document.getElementById('red_card').style.display="none";
        document.getElementById('black_card').style.display="none";
        document.getElementById('blue_card').style.display="none";
        document.getElementById('white_card').style.display="none";
        console.log(green_mana);
      } else if (none_mana.checked){
        if (document.getElementById('none_card').style.display="none"){
          document.getElementById('none_card').style.display="table-cell";
        }
        document.getElementById('red_card').style.display="none";
        document.getElementById('black_card').style.display="none";
        document.getElementById('blue_card').style.display="none";
        document.getElementById('white_card').style.display="none";
        document.getElementById('green_card').style.display="none";
        console.log(none_mana);
      } else {
        document.getElementById('cards_box').style.display="none";
      }
    });

  </script>
</body>
</html>